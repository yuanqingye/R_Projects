{
    "collab_server" : "",
    "contents" : "library(ggmap)\nlibrary(geosphere)\nlibrary(googleway)\n\nplace_key = \"AIzaSyCW6btatRC9nXwaMI06bgV5iHZbsX4H034\"\nproxy_url <- \"http://127.0.0.1:59327/\"\nSys.setenv(http_proxy = proxy_url, https_proxy = proxy_url, ftp_proxy = proxy_url)\n\n# get the closest subway station from the coordination of the mall,without input for subway stations\nfind_closest_subways = function(coordinate_df,place_key){\n  coordinate_df$lat_lon <- do.call(Map, c(f= c, unname(coordinate_df)))\n  i = 1\n  result_df = data.frame(matrix(,nrow=nrow(coordinate_df), ncol=2))\n  for(v in coordinate_df$lat_lon){\n    df = google_places(key = place_key,place_type = \"subway_station\",location = v,radius = 5000,rankby = \"distance\")\n    if(!is.na(df$results$geometry$location$lat) && length(df$results$geometry$location$lat)>0){\n      result_df[i,] = c(df$results$geometry$location$lat[1],df$results$geometry$location$lng[1])\n    }\n    i = i+1\n  }\n  return(result_df)\n  #apply(DF[, c(\"height\", \"weight\")], 1, f)\n}\n#input should be data frame shops with city and location(shop names)\nget_geo_info = function(shops) {\n  #将设置改成全英文，容易理解和编码\n  Sys.setlocale(category = \"LC_ALL\", locale = \"English_United States.1252\")\n  #get coordination for all shops provided only the name of the mall\n  if(nrow(shops)==1){\n    shops_cord_ch = geocode(shops$location)\n    shops_cord_ch_df = shops_cord_ch\n  }\n  else{\n  shops_cord_ch = lapply(shops$location, geocode)\n  shops_cord_ch_df = rbindlist(shops_cord_ch)\n  }\n  shops = cbind(shops,shops_cord_ch_df)\n  #get the closest subway\n  closest_subway = find_closest_subways(shops[, c(\"lat\", \"lon\")], place_key)\n  #get the subway distance \n  subway_distance = distHaversine(shops_cord_ch_df[, c('lon', 'lat')], closest_subway[, c('X2', 'X1')])\n  #load the data set result_dt3 which is produced by dianping_scrapper2 in map session\n  #save(result_dt5,file =\"~/data/result_dt5.RData\")\n  #we store all info regarding region info including name and city and coord in result_dt5\n  load(file = '~/data/result_dt5.RData')\n  shop_commerce = merge(shops,result_dt5,by = \"city\",allow.cartesian = TRUE)\n  obj_distance = distHaversine(shop_commerce[,c('lon.x','lat.x')],shop_commerce[,c('lon.y','lat.y')])\n  shop_commerce = data.table(shop_commerce)\n  shop_commerce[,distance := obj_distance]\n  shop_commerce_count = shop_commerce[distance<2500,.N,by = location.x]\n  shops = merge(shops,shop_commerce_count,by.x = \"location\",by.y = \"location.x\",all.x = TRUE)\n  setnames(shops,\"N\",\"distance_commerce_in_2500\")\n  shop_commerce_distance = shop_commerce[,min(distance,na.rm = TRUE),by = location.x]  \n  # false_row = shop_commerce[distance ==0,c(\"lon\",\"lat\",\"location.x\",\"location.y\")]\n  shops = merge(shops,shop_commerce_distance,by.x = \"location\",by.y = \"location.x\",all.x = TRUE)\n  setnames(shops,\"V1\",\"min_distance_commerce\")\n  shops = cbind(shops,subway_distance)\n  #将设置还原\n  Sys.setlocale(category = \"LC_ALL\", locale = \"\")\n  }\n\n\n\n",
    "created" : 1512965500258.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1852379259",
    "id" : "1F07607B",
    "lastKnownWriteTime" : 1512985574,
    "last_content_update" : 1512985574519,
    "path" : "~/R_Projects/rental_model/Rfile/get_geo_info.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}