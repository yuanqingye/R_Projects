m = matrix(rnorm(1000*2),ncol = 2)
max_v = pmax(m)
max_v = pmax(m[,1],m[,2])
result = mean(max_v)
m = matrix(rnorm(1000*2),ncol = 2)
max_v = pmax(m[,1],m[,2])
result = mean(max_v)
library(combinat)
length(permn(10))
factorial(10)
main = function(){
m = matrix(rnorm(1000*2),ncol = 2)
max_v = pmax(m[,1],m[,2])
result = mean(max_v)
}
system.time(main())
main = function(){
m = matrix(rnorm(10000*2),ncol = 2)
max_v = pmax(m[,1],m[,2])
result = mean(max_v)
}
system.time(main())
main = function(){
m = matrix(rnorm(100000*2),ncol = 2)
max_v = pmax(m[,1],m[,2])
result = mean(max_v)
}
system.time(main())
main2 = function(){
sum = 0
x = rnorm(100000)
y = rnorm(100000)
for(i in 1:100000){
max = max(x[i],y[i])
sum = sum + max
}
}
system.time(main2())
main2 = function(){
sum = 0
x = rnorm(100000)
y = rnorm(100000)
for(i in 1:100000){
max = max(x[i],y[i])
sum = sum + max
}
result = sum/100000
}
system.time(main2())
main2 = function(){
sum = 0
for(i in 1:100000){
xy = rnorm(2)
max = max(xy)
sum = sum + max
}
result = sum/100000
}
system.time(main2())
help(package = stat)
help(package = stats)
sim1 = function(){
result = 0
N = 10000
nblue = 10
n1 = 12
n2 = 13
for(i in 1:N){
nblue2 = ifelse((runif(1)>10/18),6,7)
result = result + ifelse(runif(1)>nblue2/13,1,0)
}
result = result/N
}
system.time(sim1())
sim1()
sim1 = function(){
result = 0
N = 10000
nblue = 10
n1 = 12
n2 = 13
for(i in 1:N){
nblue2 = ifelse((runif(1)>10/18),6,7)
result = result + ifelse(runif(1)>nblue2/13,1,0)
}
result = result/N
return(result)
}
sim1()
sim2 = function(N){
result = 0
nblue = 10
n1 = 12
n2 = 13
m = matrix(runif(2*N),ncol = 2)
result = m[,1]>10/18 & m[,2]<6/13 | m[,1]<10/18 & m[,2]>6/13
sum(result)
}
sim2(100000)
sim2 = function(N){
result = 0
nblue = 10
n1 = 12
n2 = 13
m = matrix(runif(2*N),ncol = 2)
result = m[,1]>10/18 & m[,2]<6/13 | m[,1]<10/18 & m[,2]>6/13
sum(result)/N
}
sim2(100000)
sim1 = function(N){
result = 0
nblue = 10
n1 = 12
n2 = 13
for(i in 1:N){
nblue2 = ifelse((runif(1)>10/18),6,7)
result = result + ifelse(runif(1)>nblue2/13,1,0)
}
result = result/N
return(result)
}
system.time(sim1(1000000))
system.time(sim2(1000000))
?matrix
createTimesMatrix = function(x,n){
m = matrix(0,nrow = length(x),ncol = n)
prod = x
for(i in 2:n){
prod = x*prod
matrix[,i] = prod
}
}
createTimesMatrix(1:10,10)
createTimesMatrix = function(x,n){
m = matrix(0,nrow = length(x),ncol = n)
prod = x
m[,1] = prod
for(i in 2:n){
prod = x*prod
m[,i] = prod
}
}
createTimesMatrix(1:10,10)
10^10
createTimesMatrix = function(x,n){
m = matrix(0,nrow = length(x),ncol = n)
prod = x
m[,1] = prod
for(i in 2:n){
prod = x*prod
m[,i] = prod
}
return(m)
}
createTimesMatrix(1:10,10)
Rprof()
invisible(createTimesMatrix(1:10,8))
Rprof(NULL)
summaryRprof()
Rprof()
invisible(createTimesMatrix(1:10,8))
Rprof(NULL)
summaryRprof()
Rprof()
invisible(createTimesMatrix(1:10,8))
Rprof(NULL)
summaryRprof()
