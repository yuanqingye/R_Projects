base_data = scan('ts.txt')
base_data = scan('~/ts.txt')
plot(base_data)
base_data
stl(base_data)
?stl
ts_data = ts(base_data)
stl(base_data)
plot(base_data)
plot(ts_data)
price = c(101,82,66,35,31,7)
price = ts(price,start = c(2005,1),frequency = 12)
price
price2 = scan()
library(zoo)
yield = c(15.2,16.9,15.3,14.9,15.7,15.1,16.7)
yield = c(15.2,16.9,15.3,14.9,15.7,15.1,16.7)
yield = ts(yield,start = 1884)
plot(yield)
plot(yield,type = "s")
plot(yield,type = "h")
plot(yield,type = "o",pch = 7)
plot(yield,type = "o",pch = 7,lty = 3)
plot(yield,type = "o",pch = 7,lty = 3,lwd = 4)
plot(yield,type = "o",pch = 7,lty = 3,lwd = 3)
plot(yield,type = "o",pch = 7,lty = 2,lwd = 3)
plot(yield,type = "o",pch = 7,lty = 2,lwd = 2)
plot(yield,type = "o",pch = 7,lty = 2,lwd = 2,col = "purple")
plot(yield,type = "o",pch = 7,lty = 2,lwd = 2,col = "purple",main="time series", sub = "wheal")
abline(v = 1887, lty = 2)
plot(yield,type = "o",pch = 7,lty = 2,lwd = 2,col = "purple",main="time series", sub = "wheal")
abline(v = c(1885,1889), lty = 2)
abline(h = c(15.5,16.5), lty = 4)
abline(h = c(15.5,16.5), lty = 4,color = "green")
plot(yield,type = "o",pch = 7,lty = 2,lwd = 2,col = "purple",main="time series", sub = "wheal")
abline(v = c(1885,1889), lty = 2)
abline(h = c(15.5,16.5), lty = 4,col = "green")
?acf
acf(yield)
whitenoise = rnorm(100)
whitenoise = ts(whitenoise)
plot(whitenoise)
acf(whitenoise)
Box.test(whitenoise,lag = 6)
Box.test(whitenoise,lag = 12)
sha = read.table("~/ts_data/file4.csv",sep = ",", header = TRUE)
sha = read.table("~/ts_data/file4.csv",sep = ",", header = TRUE)
View(sha)
output = ts(sha$output,start = 1964)
plot(output)
a = read.table("~/ts_data/file5.csv",sep = ",", header = TRUE)
milk = ts(a$milk,start = c(1962,1),frequency = 12)
plot(milk)
b = read.table("~/ts_data/file6.csv",sep = ",", header = TRUE)
View(b)
temp = ts(b$temp,start = 1949)
plot(temp)
acf(output,lag = 25)
plot(output)
acf(milk)
?acf
acf(temp)
for(i in 1:2) Box.test(temp,lag = 6*i)
for(i in 1:2) print(Box.test(temp,lag = 6*i))
c = read.table("~/ts_data/file7.csv",sep = ",", header = TRUE)
prop = ts(c$prop,start = 1950)
plot(prop)
acf(prop)
for(i in 1:2) print(Box.test(prop,lag = 6*i))
exer2.5.1 = ts(1:20)
plot(exer2.5.1)
acf(exer2.5.1)
mu = mean(exer2.5.1)
n = length(exer2.5.1)
xn = exer2.5.1 - mu
getasc = function(xn,k){
xn[1:n-k]*xn[1+k:n]
}
getasc(xn,1)
getasc = function(xn,k){
xn[1:(n-k)]*xn[(1+k):n]
}
getasc(xn,1)
getasc = function(xn,k){
part = xn[1:(n-k)]*xn[(1+k):n]
result = sum(part)/(n-k)
return(result)
}
getasc(xn,1)
getasc(xn,3)
getvar = function(xn){
part = xn*xn
result = sum(part)/(n-1)
return(result)
}
getvar(xn)
xn*xn
sum(xn*xn)
665/19
as.period(today - dob, unit = "years")
library(lubridate)
as.period(today - dob, unit = "years")
today<-mdy(08312015)
dob<-mdy(09071982)
today-dob
as.period(today - dob, unit = "years")
new_interval(dob, today) / years(1)
year(today)-year(dob)
difftime(today,dob,unit = "weeks")
difftime(today,dob,unit = "weeks")/2.2
difftime(today,dob,unit = "weeks")/52.25
?rwf
isS4(dob)
class(dob)
mode(dob)
str(dob)
str(function(){})
typeof(function(){})
mode(function(){})
class(function(){})
class(ts_data)
isS4(ts_data)
str(ts_data)
?ts
passenger
?scan
passengers = scan(strs)
strs ="115 145 171 196 204 242 284 315 340 360 417
126 150 180 196 188 233 277 301 318 342 391
141 178 193 236 235 267 317 356 362 406 419
135 163 181 235 227 269 313 348 348 396 461
125 172 183 229 234 270 318 355 363 420 472
149 178 218 243 264 315 374 422 435 472 535
170 199 230 264 302 364 413 465 491 548 622
170 199 242 272 293 347 405 467 505 559 606
158 184 209 237 259 312 355 404 404 463 508
133 162 191 211 229 274 306 347 359 407 461
114 146 172 180 203 237 271 305 310 362 390
140 166 194 201 229 278 306 336 337 405 432"
passengers = scan(strs)
passengers = read.table(strs)
?read.table
readLines()
readlines(con=stdin(),n = 4)
readLines(con=stdin(),n = 4)
readLines(con=stdin(),n = 4)
readLines(con=stdin(),n = 4)
readLines(con=stdin(),n = 4)
readLines(con=stdin())
library(readxl)
require(graphics)
library(forecast)
library(timeSeries)
library (tseries)
library(ggplot2)
library(TTR)
library("tseries", lib.loc="D:/R/R-3.3.3/library")
detach("package:tseries", unload=TRUE)
install.packages("timeSeries")
library(timeSeries)
TS_Power_Req <- ts(Telangana_Power$Requirement..MU., start = c(2014, 6), frequency = 12)
?sample
data()
