redstar_community_distance = distHaversine(redstar_community_mixed_df[,c('longitude.x','latitude.x')],redstar_community_mixed_df[,c('longitude.y','latitude.y')])
library(geosphere)
redstar_community_distance = distHaversine(redstar_community_mixed_df[,c('longitude.x','latitude.x')],redstar_community_mixed_df[,c('longitude.y','latitude.y')])
View(redstar_community_mixed_df)
redstar_community_distance = cbind(redstar_community_mixed_df[,c("city","province","mall_name","area","name","address","plate","roommount","pricesection")],distance = redstar_community_distance)
View(redstar_community_distance)
View(redstar_community_distance)
redstar_community_distance = data.table(redstar_community_distance)
redstar_community_5km_number = redstar_community_distance[,sum(distance<=5000),by = mall_name]
View(redstar_community_5km_number)
View(redstar_community_distance)
?sum
View(redstar_community_distance[is.na(redstar_community_distance$distance),])
View(redstar_location)
redstar_community_5km_number = redstar_community_distance[,sum(distance<=5000,na.rm = TRUE),by = mall_name]
View(redstar_community_5km_number)
redstar_community_50km_number = redstar_community_distance[,sum(distance<=50000,na.rm = TRUE),by = mall_name]
View(redstar_community_50km_number)
nrow(redstar_community_distance[is.na(redstar_community_distance$roommount),])
nrow(redstar_community_distance[redstar_community_distance$roommount == 0,])
View(redstar_community_distance)
redstar_community_5km_roomnum = redstar_community_distance[distance<5000,.(roomnum = sum(roommount,na.rm = TRUE),roomnumavailablerate = sum(roommount==0)/.N,pricemorethan50k = sum(pricesection>50000)/sum(pricesection!=0),pricemorethan10k = sum(pricesection>10000)/sum(pricesection!=0)),by = mall_name]
redstar_community_50km_roomnum = redstar_community_distance[distance<50000,.(roomnum = sum(roommount,na.rm = TRUE),roomnumavailablerate = sum(roommount==0)/.N,pricemorethan50k = sum(pricesection>50000)/sum(pricesection!=0),pricemorethan10k = sum(pricesection>10000)/sum(pricesection!=0)),by = mall_name]
View(redstar_community_50km_roomnum)
View(redstar_community_distance)
View(redstar_community_distance)
redstar_community_5km_roomnum = redstar_community_distance[distance<5000,.(roomnum = sum(roommount,na.rm = TRUE),roomnumavailablerate = sum(roommount!=0)/.N,pricemorethan50k = sum(pricesection>50000)/sum(pricesection!=0),pricemorethan10k = sum(pricesection>10000)/sum(pricesection!=0)),by = mall_name]
redstar_community_50km_roomnum = redstar_community_distance[distance<50000,.(roomnum = sum(roommount,na.rm = TRUE),roomnumavailablerate = sum(roommount!=0)/.N,pricemorethan50k = sum(pricesection>50000)/sum(pricesection!=0),pricemorethan10k = sum(pricesection>10000)/sum(pricesection!=0)),by = mall_name]
View(redstar_community_5km_roomnum)
View(redstar_community_distance)
View(redstar_community_mixed_df)
redstar_community_5km_roomavailable = redstar_community_distance[distance<=5000,.(totalprice = sum(roommount*pricesection.na.rm = TRUE),totalnum = sum(.SD[!is.na(roommount*pricesection),roommount])),by = mall_name]
redstar_community_5km_roomavailable = redstar_community_distance[distance<=5000,.(totalprice = sum(roommount*pricesection,na.rm = TRUE),totalnum = sum(.SD[!is.na(roommount*pricesection),roommount])),by = mall_name]
View(redstar_community_5km_roomavailable)
redstar_community_5km_roomavailable = redstar_community_distance[distance<=5000,.(totalprice = sum(roommount*pricesection,na.rm = TRUE),totalnum = sum(.SD[(roommount*pricesection!=0),roommount]),avg_price = totalprice/totalnum),by = mall_name]
redstar_community_5km_roomavailable[,avg_price:=totalprice/totalnum]
View(redstar_community_5km_roomavailable)
source('~/Rfile/R_hana.R', encoding = 'UTF-8')
mall_p_flow_sql = "select * from dm.dm_mall_pass_flow_day"
temp = read_data_from_hana(mall_p_flow_sql)
mall_p_flow_sql = "select * from dm_mall_pass_flow_day"
temp = read_data_from_hana(mall_p_flow_sql)
temp_contract_detail = read_data_from_hana("select * from BIGBI.DIM_CONTRACT_BOOTH_DETAIL")
mall_p_flow_sql = "select * from bigbi.dm_mall_pass_flow_day"
temp = read_data_from_hana(mall_p_flow_sql)
hana_data = read_data_from_hana("select * from REDSTAR_BI.BI_ORDER_BRAND_AVG")
options(java.parameters)
options("java.parameters")
options(java.parameters = "- Xmx1024m")
temp = read_data_from_hana(mall_p_flow_sql)
source('~/Rfile/R_hana.R', encoding = 'UTF-8')
mall_p_flow_sql = "select * from bigbi.dm_mall_pass_flow_day"
temp = read_data_from_hana(mall_p_flow_sql)
View(temp)
unique(temp$MALL_NAME)
View(redstar_points)
View(redstar_points)
1.045…^1
1.045^10
View(redstar_community_50km_number)
View(redstar_community_5km_number)
View(redstar_community_5km_roomnum)
View(business_region)
View(community_data)
View(community_data[,c("city","name","pricesection")])
View(community_data[community_data$pricesection>0,c("city","name","pricesection")])
View(community_data[community_data$pricesection>0 & community_data$city == "北京市",c("city","name","pricesection")])
View(community_data[community_data$pricesection>0 & community_data$city == "上海市",c("city","name","pricesection")])
View(redstar_location)
city
city = unique(redstar_location$city)
city = paste0(city,"市")
community_data_focus = community_data[community_data$city %in% city,]
class(community_data_focus)
community_data_focus = data.table(community_data_focus)
?sample
View(community_data_focus)
community_data_sample = community_data_focus[,.SD[1:10,],by = "city"]
View(community_data_sample)
sample(city,10)
community_data_sample = community_data_focus[,.SD[sample(nrow(.SD),10),],by = "city"]
View(community_data_sample)
community_data_sample = community_data_focus[pricesection > 0,.SD[sample(nrow(.SD),10),],by = "city"]
community_data_sample = community_data_sample[,c("city","name","pricesection")]
View(community_data_sample)
View(redstar_result)
View(commerce_cord_final_result)
View(commerce_cord_result)
View(commerce_cord_result[str_detect(commerce_cord_result$pv,"其他$"),c("lat","lon","lat2","lon2")])
View(commerce_cord_final_result)
head(business_region_final)
commerce_cord_final_result = commerce_cord_result[,c("pv","lon","lat")]
commerce_cord_final_result = cbind(city = business_region_final$city_name,commerce_cord_final_result)
commerce_cord_final_result$city = as.character(commerce_cord_final_result$city)
commerce_cord_final_result = merge(redstar_location,commerce_cord_final_result,by = "city",allow.cartesian=TRUE)
commerce_cord_final_result$commerce_distance = distHaversine(commerce_cord_final_result[,c('longitude','latitude')],commerce_cord_final_result[,c('lon','lat')])
library(geosphere)
library(readxl)
library(data.table)
library(pinyin)
library(geosphere)
commerce_cord_final_result$commerce_distance = distHaversine(commerce_cord_final_result[,c('longitude','latitude')],commerce_cord_final_result[,c('lon','lat')])
View(commerce_cord_final_result)
commerce_distance_df = commerce_cord_final_result[,.(commerce_distance = min(commerce_distance)),by = "mall_name"]
View(commerce_distance_df)
redstar_result = merge(redstar_result,commerce_distance_df,by = "mall_name")
head(redstar_location)
redstar_result = redstar_location #redstar_result don't have an order
View(result_subway)
head(subway_distance)
head(closest_subway)
View(closest_subway)
subway_distance = distHaversine(redstar_location[,c('longitude','latitude')],closest_subway[,c('X2','X1')])
result_subway = cbind(mall_name = redstar_location$mall_name,subway_distance)
redstar_result = merge(redstar_result,result_subway,by = "mall_name")
View(redstar_result)
View(result_subway)
redstar_result = merge(redstar_result,commerce_distance_df,by = "mall_name")
redstar_result$mall_name = factor(redstar_result$mall_name,levels = redstar_location$mall_name,ordered = TRUE)
redstar_result = redstar_result[order(redstar_result$mall_name),]
View(redstar_result)
head(shop_commerce_count)
shop_commerce_count = commerce_cord_final_result[,.(distance_commerce_in_2500 = sum(commerce_distance<2500)),by = mall_name]
redstar_result = merge(redstar_result,shop_commerce_count,by = "mall_name")
View(redstar_result)
head(closest_road_list)
head(closest_road_df)
head(closest_road_distance)
closest_road_distance = distHaversine(redstar_location[,c('longitude','latitude')],closest_road_df[,c('lng','lat')])
closest_road_distance_df = cbind(mall_name = redstar_location$mall_name,closest_road_distance)
redstar_result = merge(redstar_result,closest_road_distance_df,by = "mall_name")
head(district_location_df)
head(district_lat_lon_matrix)
class(district_lat_lon_matrix)
head(district_location_list)
View(redstar_four_direction_final_df)
head(redstar_four_direction_df)
View(redstar_direction_final_df)
nrow(redstar_direction_final_df)
View(redstar_four_direction_df)
redstar_four_direction_df = makeFourDirectionFromDF(redstar_location)
View(redstar_four_direction_df)
View(redstar_four_direction_mixed_df)
redstar_four_direction_mixed_df = merge(redstar_location,redstar_direction_df,by = "mall_name",allow.cartesian=TRUE)
redstar_four_direction_mixed_df = as.data.frame(redstar_four_direction_mixed_df)
redstar_four_direction_df = list()
View(redstar_four_direction_final_df)
proxy_url
Sys.getenv("http_proxy")
Sys.setenv(http_proxy = proxy_url, https_proxy = proxy_url, ftp_proxy = proxy_url)
for(i in 2:7){
redstar_four_direction_df[[i]] = getDirectionInfoFromDF(redstar_four_direction_mixed_df[(40*(i-1)+1):(40*i),])
}
source('~/R_Projects/rental_model_standard/Rfile/functions.R', encoding = 'UTF-8')
for(i in 2:7){
redstar_four_direction_df[[i]] = getDirectionInfoFromDF(redstar_four_direction_mixed_df[(40*(i-1)+1):(40*i),])
}
head(redstar_four_direction_df)
redstar_four_direction_final_df = rbindlist(redstar_four_direction_df)
nrow(redstar_four_direction_final_df)
View(redstar_four_direction_final_df)
View(redstar_four_direction_mixed_df)
redstar_four_direction_df[[1]] = getDirectionInfoFromDF(redstar_four_direction_mixed_df[1:40,])
redstar_four_direction_df[[1]] = getDirectionInfoFromDF(redstar_four_direction_mixed_df[1:40,])
redstar_four_direction_final_df = rbindlist(redstar_four_direction_df)
View(redstar_four_direction_final_df)
redstar_four_direction_final_df = redstar_four_direction_final_df[1:260,]
combined_highway_raw_df = rbind(redstar_direction_final_df,redstar_four_direction_final_df)
combined_highway_raw_dt = data.table(combined_highway_raw_df)
shortest_distance_result = combined_highway_raw_dt[,.(highway_distance = min(highway_distance),district_center_distance = min(distance,na.rm = TRUE)),by = "start_point"]
redstar_result = merge(redstar_result,shortest_distance_result,by.x = "mall_name",by.y = "start_point")
View(redstar_result)
source("~/Rfile/R_impala.R")
community_data_sql = "select id,city,province,area,name,address,plate,areamonut,roommount,buildingdate,longitude,latitude,buildingamount,pricesection,ownermallname from ods.ods_db_dragoneye_xiwa_redstar_community_dt"
community_data = read_data_impala_general(community_data_sql)
View(community_data)
View(redstar_community_mixed_df)
View(redstar_community_distance)
View(redstar_community_5km_roomavailable)
save.image("~/R_Projects/rental_model_standard/.RData")
View(redstar_result)
View(community_data_focus)
community_data_sample = community_data_focus[pricesection > 0,.SD[sample(nrow(.SD),10),],by = "city"]
community_data_sample = community_data_sample[,c("city","name","address","pricesection")]
2196814/56855
library(readxl)
rent_original = read_xlsx("C:\Users\qingye.yuan\Desktop\工作需要\租金定价\租金定价模型二期数据.xlsx")
rent_original = read_xlsx("C:/Users/qingye.yuan/Desktop/工作需要/租金定价/租金定价模型二期数据.xlsx")
View(rent_original)
str(rent_original)
rent_original = as.data.frame.numeric(rent_original)
View(rent_original)
rent_original = read_xlsx("C:/Users/qingye.yuan/Desktop/工作需要/租金定价/租金定价模型二期数据.xlsx")
?lapply
rent_original[] = lapply(rent_original,as.numeric)
View(rent_original)
rent_original = read_xlsx("C:/Users/qingye.yuan/Desktop/工作需要/租金定价/租金定价模型二期数据.xlsx")
mall_name = rent_original$MALL_NAME
rent_original[] = lapply(rent_original,as.numeric)
rent_original$MALL_NAME = mall_name
View(rent_original)
rent_original$avg_price = rent_original$ZX_PRICE/rent_original$RENT_AREA_WA
View(rent_original)
View(rent_original[,c("MALL_NAME","avg_price")])
1.05^10
library(rvest)
city_gdp_url = "https://wenku.baidu.com/view/b97475622f3f5727a5e9856a561252d380eb2021.html"
city_gdp_page = read_html(city_gdp_url)
city_gdp = city_gdp_page %>% html_nodes('div.bd>p.reader-word-layer') %>% html_text()
city_gdp = city_gdp_page %>% html_nodes('div.bd p.reader-word-layer') %>% html_text()
city_gdp = city_gdp_page %>% html_nodes('p.reader-word-layer') %>% html_text()
city_gdp
city_gdp = city_gdp_page %>% html_nodes('p') %>% html_text()
city_gdp
city_gdp = city_gdp_page %>% html_nodes('div') %>% html_text()
city_gdp
city_gdp = city_gdp_page %>% html_nodes('div')
city_gdp = city_gdp_page %>% html_nodes('div.bd')
city_gdp = city_gdp_page %>% html_nodes('div.bd>p')
city_gdp = city_gdp_page %>% html_nodes('.reader-pic-item')
city_gdp
city_gdp_url = "https://wenku.baidu.com/view/b97475622f3f5727a5e9856a561252d380eb2021.html"
city_gdp_page = read_html(city_gdp_url)
city_gdp = city_gdp_page %>% html_nodes('.reader-pic-item') %>% html_text()
city_gdp
city_gdp = city_gdp_page %>% html_nodes('div.reader-pic-item') %>% html_text()
city_gdp
city_gdp_url = "http://www.sohu.com/a/219596742_683734"
city_gdp_page = read_html(city_gdp_url)
city_gdp = city_gdp_page %>% html_nodes('article#mp-editor') %>% html_text()
city_gdp
str(city_gdp)
city_gdp_page = read_html(city_gdp_url)
city_gdp = city_gdp_page %>% html_nodes('article#mp-editor')
library(magrittr)
city_gdp %>% html_text()
city_gdp = city_gdp_page %>% html_nodes('article#mp-editor') %>% html_text()
head(city_gdp)
city_gdp = city_gdp_page %>% html_nodes('article#mp-editor p') %>% html_text()
city_gdp
a = 5
a
print(city_gdp)
a = 5
a
city_gdp_url = "http://www.sohu.com/a/219596742_683734"
city_gdp_page = read_html(city_gdp_url)
city_gdp = city_gdp_page %>% html_nodes('article#mp-editor') %>% html_text()
library(rvest)
library(magrittr)
city_gdp = city_gdp_page %>% html_nodes('article#mp-editor') %>% html_text()
city_gdp_page = read_html(city_gdp_url)
city_gdp = city_gdp_page %>% html_nodes('article#mp-editor') %>% html_text()
city_gdp
city_gdp = city_gdp_page %>% html_nodes('article#mp-editor p') %>% html_text()
city_gdp
str_detect(city_gdp,"^\d")
str_detect(city_gdp,"^\\d")
head(city_gdp)
str_detect(city_gdp,"^\\d\.")
str_detect(city_gdp,"^\\d\\.")
str_detect(city_gdp,"^[\\d]{1,2}\\.")
city_gdp = city_gdp[str_detect(city_gdp,"^[\\d]{1,2}\\.")]
city_gdp
str_extract(city_gdp,"\\d+(?=亿元)")
gdp = str_extract(city_gdp,"\\d+(?=亿元)")
str_extract(city_gdp,"\\d+(?=万)")
population = str_extract(city_gdp,"\\d+(?=万)")
str_extract(city_gdp,"(?<=同比增长)\\w+(?=%)")
str_extract(city_gdp,"(?<=同比增长)\\w+(?=\\%)")
str_extract(city_gdp,"(?<=同比增长)\\w+")
str_extract(city_gdp,"\\w+(?=\\%)")
str_extract(city_gdp,"(?<=同比增长)\\d+")
str_extract("同比增长123","(?<=同比增长)\\d+")
str_extract("aaa123","(?<=aaa)\\d+")
str_extract("abcd123","(?<=abcd)\\d+")
Encoding("同比增长")
guess_encoding("同比增长")
Sys.setlocale(category = "LC_ALL", locale = "English_United States.1252")
guess_encoding("同比增长")
str_extract("同比增长123","(?<=同比增长)\\d+")
str_extract("abcd123","(?<=abcd)\\d+")
str_extract("123同比增长","\\d+(?<=同比增长)")
str_extract("123同比增长","\\d+(?=同比增长)")
str_extract("123同比增长123","\\d+(?<=同比增长)")
increasing_rate = str_extract(city_gdp,"\\d+(?=%)")
str_extract(city_gdp,"\\d+(?=%)")
str_extract(city_gdp,"\\d+(\\.)?\\d+(?=%)")
str_extract(city_gdp,"\\d+(\\.)?\\d*(?=%)")
increasing_rate = str_extract(city_gdp,"\\d+(\\.)?\\d*(?=%)")
str_extract(city_gdp,"(?<=\d+)\w+(?=\d)")
str_extract(city_gdp,"(?<=\\d+)\\w+(?=\\d)")
str_extract(city_gdp,"(?<=\\d+)\\w+(?=\\d)")
str_extract(city_gdp,"(?<=\\d+)\\w+(?=(\\d){1}")
str_extract(city_gdp,"(?<=\\d+)(\\w){1,3}(?=\\d)")
str_extract(city_gdp,"(?<=\\d+\\.)\\w")
str_extract(city_gdp,"(?<=(\\d){1,2}\\.)\\w")
str_extract(city_gdp,"(?<=(\\d){1,2}\\.)\\w{2,4}")
str_extract(city_gdp,"(?<=(\\d){1,2}\\.)[^0-9]{2,4}")
str_extract(city_gdp,"(?<=(\\d){1,2}\\.)[^0-9\\(]{2,4}")
str_extract(city_gdp,"(?<=(\\d){1,2}\\.)[^0-9（]{2,4}")
str_extract(city_gdp,"(?<=(\\d){1,2}\\.)[^0-9a-z]{2,4}")
str_extract(city_gdp,"(?<=(\\d){1,2}\\.)[^（]{2,4}")
str_extract(city_gdp,"(?<=(\\d){1,2}\\.)[^3]{2,4}")
str_extract(city_gdp,"(?<=(\\d){1,2}\\.)[^0]{2,4}")
str_extract(city_gdp,"(?<=(\\d){1,2}\\.)[^长沙]{2,4}")
str_extract(city_gdp,"(?<=(\\d){1,2}\\.)[^（]{2,4}")
str_extract(city_gdp,"(?<=(\\d){1,2}\\.)[^\\（]{2,4}")
str_detect("(","(")
str_detect("(","\\(")
str_detect("（","（")
str_detect("（","\\（")
str_detect("（","[^\\（]")
str_detect("武汉（","[^\\（]")
str_extract("武汉（","[^\\（]")
str_extract("武汉（","[^\\（]+")
str_extract(city_gdp,"(?<=(\\d){1,2}\\.)[^\\（]+")
str_detect(city_gdp,"（")
str_detect(city_gdp,"\\（")
str_detect(city_gdp,"\\(")
str_detect(city_gdp,"\\(")
str_detect(city_gdp,"\\（")
str_detect(city_gdp,"\\(")
str_detect(city_gdp,"\\(")
str_detect(city_gdp,"\\（")
str_detect(city_gdp,"\\（")
str_detect(city_gdp,"\\（")
guess—guess_encoding(city_gdp)
guess_encoding(city_gdp)
str_extract(city_gdp,"(?<=\\d+\\.)\\w")
str_extract(city_gdp,"(?<=\\d\\.)\\w")
str_extract(city_gdp,"(?<=\\d\\.)\\w+(?=\\d)")
str_extract(city_gdp,"(?<=\\d\\.)\\w+(?=亿元)")
str_extract(city_gdp,"\\w+(?=亿元)")
str_extract(city_gdp,"(?<=\\d\\.)[^0-9]+(?=\\d)")
str_extract(city_gdp,"(?<=\\d\\.)[^0-9]+(?=\\d{2,})")
str_extract(city_gdp,"(?<=\\d\\.)[^0-9]+(?=(\\d){2,})")
str_extract(city_gdp,"(?<=\\d\\.)[^0-9]+(?=(\\d){2,100})")
str_extract(city_gdp,"(?<=\\d\\.)[^0-9]+(?=(\\d))")
str_extract(city_gdp,"(?<=\\d\\.)[\\D]+(?=(\\d))")
str_extract(city_gdp,"(?<=\\d\\.)[\\D]+(?=(\\d){2})")
str_extract(AA7500,"[\\D]+(?=(\\d){2})")
str_extract("AA7500","[\\D]+(?=(\\d){2})")
str_extract(city_gdp,"(?<=\\d\\.)[\\w]+(?=(\\d){2})")
str_extract(city_gdp,"(?<=\\d\\.)\\w+(?=(\\d){2})")
str_extract(city_gdp,"(?<=\\d\\.)[^a-z]+(?=(\\d){2})")
str_extract(city_gdp,"(?<=\\d\\.)[^a-z]+?(?=(\\d){2})")
str_detect("（","\\（")
str_detect("（","\\（")
str_detect(city_gdp,"\\（")
str_detect("（","\\（")
guess_encoding(city_gdp)
temp = iconv(city_gdp,'utf-8','gbk')
head(temp)
guess_encoding()
guess_encoding(temp)
str_extract(city_gdp,"(?<=\\d\\.)\\w(?=\\（")
str_extract(city_gdp,"(?<=\\d\\.)\\w(?=(\\（)")
str_extract(city_gdp,"(?<=\\d\\.)\\w(?=(\\（")))
str_extract(city_gdp,"(?<=\\d\\.)\\w(?=\\（))
)
)
)
str_extract(city_gdp,"(?<=\\d\\.)[^a-z]+?(?=(\\d){2})")
str_extract(temp,"(?<=\\d\\.)[^a-z]+?(?=(\\d){2})")
str_extract(temp,"(?<=\\d\\.)\\w(?=(\\d){2})")
str_extract(temp,"(?<=\\d\\.)(\\w)+(?=(\\d){2})")
str_extract(temp,"(?<=\\d\\.)[^a-z]+(?=(\\d){2})")
str_extract(temp,"(?<=\\d\\.)[^a-z]+(?=(\\（))")
head(name)
city_name = str_extract(city_gdp,"(?<=\\d\\.)[^a-z]+?(?=(\\d){2})")
city_name
library(tabulizer)
city_gdp1 = extract_tables("D://downloads//gdp_ranking1.jpg")
city_gdp_pdf = extract_tables("D://downloads//gdp_ranking.pdf")
city_gdp_pdf
city_gdp_pdf = extract_tables("D://downloads//gdp_ranking.pdf")
malls = extract_tables("C://Users/qingye.yuan/Downloads/mall.pdf",encoding = "UTF-8")
rm(malls)
city_gdp_pdf = extract_tables("D://downloads//gdp_ranking.pdf",encoding = "UTF-8",pages = 2)
city_gdp_pdf
?extract_tables
library(tesseract)
gdp_pic1  <- ocr("D://downloads//gdp_ranking1.jpg")
gdp_pic1
help(package = "tesseract")
city_rank = read.table("~/data/city_rank.txt",sep = " ")
city_rank = read.table("~/data/city_rank.txt",sep = " ")
city_rank = read.table("~/data/city_rank.txt",sep = " ")
city_rank = read.table("~/data/city_rank.txt",sep = " ")
View(city_rank)
city_rank = read.table("~/data/city_rank.txt",sep = " ",fileEncoding = "utf-8")
View(city_rank)
special_city_rank = read.table("~/data/city_rank2.txt",sep = " ",fileEncoding = "utf-8")
special_city_rank = read.table("~/data/city_rank2.txt",sep = "  ",fileEncoding = "utf-8")
special_city_rank = read.table("~/data/city_rank2.txt",sep = "  ",fileEncoding = "utf-8")
special_city_rank = read.table("~/data/city_rank2.txt",sep = " ",fileEncoding = "utf-8")
View(special_city_rank)
score = special_city_rank$V2
city_rank = cbind(city_rank,score)
length(score)
city_rank$score = NA
city_rank$score = score
str(city_rank)
str(score)
city_rank$score[1:19] = score
View(city_rank)
city_rank$score[20:49] = seq(from = 35,to = 25,legnth.out = 30)
View(city_rank)
seq(1,10,0.5)
seq(from = 35,to = 25,legnth.out = 30)
city_rank$score[20:49] = seq(from = 35,to = 25,length.out = 30)
View(city_rank)
city_rank$score[50:119] = seq(from = 22,to = 15,length.out = 70)
View(city_rank)
city_rank$score[120:209] = seq(from = 13,to = 8,length.out = 90)
city_rank$score[210:nrow(city_rank)] = seq(from = 6,to = 1,length.out = 129)
colnames(city_rank)[[1]] = "city_name"
save(redstar_result,"redstar_result.RData")
setwd("~/R_Projects/rental_model_standard")
getwd()
x <- stats::runif(20)
y <- list(a = 1, b = TRUE, c = "oops")
save(x, y, file = "xy.RData")
rm(x)
rm(y)
save(redstar_result,file = "redstar_result.RData")
df
f = function(){attach(df)}
f()
df = as.data.frame(df)
str(temp)
f()
all_city_pin = read.table("C:\Users\qingye.yuan\Desktop\工作需要\工作信息\city_pinyin.txt",sep = " ")
all_city_pin
all_city_pin = read.table("C:/Users/qingye.yuan/Desktop/工作需要/工作信息/city_pinyin.txt",sep = " ")
all_city_pin = read.table("C:/Users/qingye.yuan/Desktop/工作需要/工作信息/city_pinyin.txt",sep = "\\s")
all_city_pin = read.table("C:/Users/qingye.yuan/Desktop/工作需要/工作信息/city_pinyin.txt",sep = "\\t")
install.packages("readtext ")
install.packages("readtext")
library(readtext)
temp2 = readtext("C:/Users/qingye.yuan/Desktop/工作需要/工作信息/city_pinyin.txt")
?readtext
temp2 = readtext(file = "C:/Users/qingye.yuan/Desktop/工作需要/工作信息/city_pinyin.txt")
temp2 = readtext("~/Rfile/temp.R")
fileName <- "C:/Users/qingye.yuan/Desktop/工作需要/工作信息/city_pinyin.txt"
con <- file(fileName,open="r")
line <- readLines(con)
close(con)
line
all_city_pin = read.table("C:/Users/qingye.yuan/Desktop/工作需要/工作信息/city_pinyin.txt",sep = " ",encoding = "utf-8")
all_city_pin = read.table("C:/Users/qingye.yuan/Desktop/工作需要/工作信息/city_pinyin.txt",sep = " ",fileEncoding = "utf-8")
all_city_pin = read.table("C:/Users/qingye.yuan/Desktop/工作需要/工作信息/city_pinyin.txt",sep = " ",fileEncoding = "utf-8")
all_city_pin = read.table("C:/Users/qingye.yuan/Desktop/工作需要/工作信息/city_pinyin.txt",sep = " ",fileEncoding = "utf-8")
all_city_pin = read.table("C:/Users/qingye.yuan/Desktop/工作需要/工作信息/city_pinyin.txt",sep = " ",fileEncoding = "utf-8",nrow = 736)
all_city_pin = read.table("C:/Users/qingye.yuan/Desktop/工作需要/工作信息/city_pinyin.txt",sep = " ",fileEncoding = "utf-8",nrows = 736)
all_city_pin = read.table("C:/Users/qingye.yuan/Desktop/工作需要/工作信息/city_pinyin.txt",sep = " ",fileEncoding = "utf-8",nrows = 500)
all_city_pin = read.table("C:/Users/qingye.yuan/Desktop/工作需要/工作信息/city_pinyin.txt",sep = " ",fileEncoding = "utf-8",nrows = 500)
View(all_city_pin)
all_city_pin = read.table("C:/Users/qingye.yuan/Desktop/工作需要/工作信息/city_pinyin.txt",sep = " ",fileEncoding = "utf-8",nrows = 500)
View(all_city_pin)
colnames(all_city_pin) = c("city_name","city_pinyin","city_abbr")
all_city_pin$city_pinyin = tolower(all_city_pin$city_pinyin)
View(all_city_pin)
str(redstar_location$city)
str(redstar_location[,"city"])
View(city_pinyin_df)
city_list = unique(redstar_location$city)
city_list = data.frame(city_list = city_list)
city_pinyin_df = merge(city_list,all_city_pin,by.x = "city_list",by.y = "city_name",all.x = True)
city_pinyin_df = merge(city_list,all_city_pin,by.x = "city_list",by.y = "city_name",all.x = TRUE)
View(city_pinyin_df)
Sys.getenv()
Sys.getenv("http_proxy")
m = m_check_lon_lat[abs(m_check_lon_lat$longitude-m_check_lon_lat$lon)>0.02|(m_check_lon_lat$latitude-m_check_lon_lat$lat)>0.02,]
m_check_lon_lat = merge(redstar_points,shop_tables_self_manage,by.x = "商场代码",by.y = "MALL_CODE",all.x = TRUE)
shop_tables_self_manage = shop_tables[shop_tables$MALL_TYPE=="自营",c("MALL_NAME","MALL_CODE","GPS","COUNTRY_NAME","OPEN_DATE")]
source('~/Rfile/R_hana.R', encoding = 'UTF-8')
shop_tables = read_data_from_hana("select * from BIGBI.DIM_ALL_MALL_V2")
View(shop_tables)
shop_tables_self_manage = shop_tables[shop_tables$MALL_TYPE=="自营",c("MALL_NAME","MALL_CODE","GPS","COUNTRY_NAME","OPEN_DATE")]
shop_tables_self_manage[,c("lon","lat")] = str_split_fixed(shop_tables_self_manage$GPS,n = 2,";")
shop_tables_self_manage = shop_tables_self_manage[-1,]
shop_tables_self_manage$OPEN_DATE = str_sub(shop_tables_self_manage$OPEN_DATE,1,10)
m_check_lon_lat = merge(redstar_points,shop_tables_self_manage,by.x = "商场代码",by.y = "MALL_CODE",all.x = TRUE)
str(shop_tables_self_manage)
str(redstar_points)
shop_tables_self_manage$MALL_CODE = as.numeric(shop_tables_self_manage$MALL_CODE)
shop_tables_self_manage$lon = as.numeric(shop_tables_self_manage$lon)
shop_tables_self_manage$lat = as.numeric(shop_tables_self_manage$lat)
m_check_lon_lat = merge(redstar_points,shop_tables_self_manage,by.x = "商场代码",by.y = "MALL_CODE",all.x = TRUE)
m = m_check_lon_lat[abs(m_check_lon_lat$longitude-m_check_lon_lat$lon)>0.02|(m_check_lon_lat$latitude-m_check_lon_lat$lat)>0.02,]
View(m)
m = m_copy
m_copy = m
save.image("~/R_Projects/rental_model_standard/.RData")
m$商场代码
redstar_points = read_xlsx("~/data/selfmanaged_business.xlsx",sheet = '商场总名单')
f = function(){library(readxl)}
f()
redstar_points = read_xlsx("~/data/selfmanaged_business.xlsx",sheet = '商场总名单')
library(readxl)
library(data.table)
library(pinyin)
library(geosphere)
redstar_points = data.table(redstar_points)
redstar_points = redstar_points[商场类型=='自营',]
redstar_location = redstar_points[,c('商场名称','city','longitude','latitude')]
colnames(redstar_location)[[1]] = 'mall_name'
redstar_result = redstar_location #redstar_result don't have an order
city = unique(redstar_location$city)
city = paste0(city,"市")
