{
    "collab_server" : "",
    "contents" : "library(readxl)\nlibrary(data.table)\nlibrary(pinyin)\nlibrary(geosphere)\n# Read info about the mall\nredstar_points = read_xlsx(\"~/data/selfmanaged_business.xlsx\",sheet = '商场总名单')\nredstar_points = data.table(redstar_points)\nredstar_points = redstar_points[商场类型=='自营',]\nredstar_location = redstar_points[,c('商场名称','city','longitude','latitude')]\ncolnames(redstar_location)[[1]] = 'mall_name'\nredstar_result = redstar_location #redstar_result don't have an order\ncity = unique(redstar_location$city)\ncity = paste0(city,\"市\")\n\n#find the closest subways around the mall\nsource(\"~/R_Projects/rental_model_standard/Rfile/functions.R\")\nSys.setenv(http_proxy = proxy_url, https_proxy = proxy_url, ftp_proxy = proxy_url)\nclosest_subway = find_closest_subways(redstar_location,place_key)\nsubway_distance = distHaversine(redstar_location[,c('longitude','latitude')],closest_subway[,c('X2','X1')])\n# redstar_location = cbind(redstar_location,subway_distance)\nresult_subway = cbind(mall_name = redstar_location$mall_name,subway_distance)\nredstar_result = merge(redstar_result,result_subway,by = \"mall_name\")\n\n#get the mall info from the dianping web scrap\nsource(\"~/R_Projects/page_destructure/Rfile/Rvest.R\")\nSys.unsetenv(\"http_proxy\")\nSys.unsetenv(\"https_proxy\")\nSys.unsetenv(\"ftp_proxy\")\ncity_list = unique(redstar_points$city)\ncity_list_pinyin = lapply(city_list,pinyin,method = \"toneless\", sep = \"\")\ncity_list_pinyin[[9]] = \"eerduosi\"\ncity_list_pinyin[[14]] = \"huhehaote\"\ncity_list_pinyin[[16]] = \"kunming\"\ncity_list_pinyin[[17]] = \"hefei\"\ncity_list_pinyin[[19]] = \"wuxi\"\ncity_list_pinyin[[20]] = \"chengdu\"\ncity_list_pinyin[[21]] = \"shenyang\"\ncity_list_pinyin[[23]] = \"yantai\"\ncity_list_pinyin[[29]] = \"nanjing\"\ncity_list_pinyin[[32]] = \"jinan\"\ncity_list_pinyin[[34]] = \"xiamen\"\ncity_list_pinyin[[38]] = \"shenzhen\"\n\ncity_pinyin_df = data.frame(city_name = city_list,city_pinyin = unlist(city_list_pinyin))\nbusiness_region = dianping_scrapper2(city_list_pinyin)\nbusiness_region_final = merge(business_region,city_pinyin_df,by.x = \"city\",by.y = \"city_pinyin\")\npv = paste0(business_region_final$city_name,business_region_final$region)\nbusiness_region_final$location = pv\n\n# geocode only support 2500 connection\ncommerce_cord_ch = list()\ncommerce_cord_ch[[1]] = lapply(pv[1:2000],geocode)\ncommerce_cord_ch[[2]] = lapply(pv[2001:4000],geocode)\ncommerce_cord_ch[[3]] = lapply(pv[4001:4500],geocode)\ncommerce_cord_ch[[4]] = lapply(pv[4501:length(pv)],getSimplifiedGeoData)\n# The rest \ncommerce_cord_ch[[1]] = rbindlist(commerce_cord_ch[[1]])\ncommerce_cord_ch[[2]] = rbindlist(commerce_cord_ch[[2]])\ncommerce_cord_ch[[3]] = rbindlist(commerce_cord_ch[[3]])\n# commerce_cord_ch[[3]] = commerce_cord_ch[[3]][1:500]\ncommerce_cord_ch[[4]] = rbindlist(commerce_cord_ch[[4]])\ncolnames(commerce_cord_ch[[4]]) = c(\"lat\",\"lon\",\"lat2\",\"lon2\")\ncommerce_cord_result = rbindlist(commerce_cord_ch[1:4],fill = TRUE)\ncommerce_cord_result = cbind(pv,commerce_cord_result)\nextra_pv = commerce_cord_result[apply(is.na(commerce_cord_result[,-1]),1,all),]$pv\n# The rest na part need to be refilled\ncommerce_cord_ch[[5]] = lapply(extra_pv,getSimplifiedGeoData)\ncommerce_cord_ch[[5]] = rbindlist(commerce_cord_ch[[5]])\ncolnames(commerce_cord_ch[[5]]) = c(\"lat\",\"lon\",\"lat2\",\"lon2\")\ncommerce_cord_result[apply(is.na(commerce_cord_result[,-1]),1,all),c(\"lat\",\"lon\",\"lat2\",\"lon2\")] = commerce_cord_ch[[5]][,c(\"lat\",\"lon\",\"lat2\",\"lon2\")]\nextra_pv2 = commerce_cord_result[apply(is.na(commerce_cord_result[,-1]),1,all),]$pv\ncommerce_cord_ch[[6]] = lapply(extra_pv2,getDaodeGeoData)\ncommerce_cord_ch[[6]] = rbindlist(commerce_cord_ch[[6]])\ncommerce_cord_ch[[6]] = cbind(commerce_cord_ch[[6]],lat2 = NA,lon2 = NA)\n# a = lapply(commerce_cord_ch[[6]],as.character)\n# a = lapply(a,as.numeric)\n# commerce_cord_ch[[6]] = as.data.frame(a)\ncommerce_cord_result[apply(is.na(commerce_cord_result[,-1]),1,all),c(\"lat\",\"lon\",\"lat2\",\"lon2\")] = commerce_cord_ch[[6]][,c(\"lat\",\"lon\",\"lat2\",\"lon2\")]\nextra_pv3 = commerce_cord_result[str_detect(commerce_cord_result$pv,\"其他$\"),]$pv\nextra_pv3 = str_replace_all(extra_pv3,\"其他\",\"中心\")\ncommerce_cord_ch[[7]] = lapply(extra_pv3,getDaodeGeoData)\ncommerce_cord_ch[[7]] = rbindlist(commerce_cord_ch[[7]])\ncommerce_cord_ch[[7]] = cbind(commerce_cord_ch[[7]],lat2 = NA,lon2 = NA)\ncommerce_cord_result[str_detect(commerce_cord_result$pv,\"其他$\"),c(\"lat\",\"lon\",\"lat2\",\"lon2\")] = commerce_cord_ch[[7]][,c(\"lat\",\"lon\",\"lat2\",\"lon2\")]\ncommerce_cord_final_result = commerce_cord_result[,c(\"pv\",\"lon\",\"lat\")]\ncommerce_cord_final_result = cbind(city = business_region_final$city_name,commerce_cord_final_result)\ncommerce_cord_final_result$city = as.character(commerce_cord_final_result$city)\ncommerce_cord_final_result = merge(redstar_location,commerce_cord_final_result,by = \"city\",allow.cartesian=TRUE)\ncommerce_cord_final_result$commerce_distance = distHaversine(commerce_cord_final_result[,c('longitude','latitude')],commerce_cord_final_result[,c('lon','lat')])\ncommerce_distance_df = commerce_cord_final_result[,.(commerce_distance = min(commerce_distance)),by = \"mall_name\"]\nredstar_result = merge(redstar_result,commerce_distance_df,by = \"mall_name\")\nredstar_result$mall_name = factor(redstar_result$mall_name,levels = redstar_location$mall_name,ordered = TRUE)\nredstar_result = redstar_result[order(redstar_result$mall_name),]\n\n# shop_commerce_count = commerce_cord_final_result[commerce_distance<2500,.N,by = mall_name]\nshop_commerce_count = commerce_cord_final_result[,.(distance_commerce_in_2500 = sum(commerce_distance<2500)),by = mall_name]\nredstar_result = merge(redstar_result,shop_commerce_count,by = \"mall_name\")\n\nclosest_road_list = getClosestRoadPointFromDF(redstar_location)\nclosest_road_df = rbindlist(closest_road_list)\nclosest_road_distance = distHaversine(redstar_location[,c('longitude','latitude')],closest_road_df[,c('lng','lat')])\nclosest_road_distance_df = cbind(mall_name = redstar_location$mall_name,closest_road_distance)\nredstar_result = merge(redstar_result,closest_road_distance_df,by = \"mall_name\")\n\ndistrict_location_list = lapply(city_list,getGaoDeDistrictInfo)\ndistrict_location_df = rbindlist(district_location_list)\ndistrict_lat_lon_matrix = str_split_fixed(district_location_df$center_location,\",\",2)\nclass(district_lat_lon_matrix) = \"numeric\"\ndistrict_location_df$lon = district_lat_lon_matrix[,1]\ndistrict_location_df$lat = district_lat_lon_matrix[,2]\nredstar_district_mixed_df = merge(redstar_location,district_location_df,by = \"city\",allow.cartesian=TRUE)\nredstar_direction_df = list()\nredstar_direction_df[[1]] = getDirectionInfoFromDF(redstar_district_mixed_df[1:40,])\nredstar_direction_df[[2]] = getDirectionInfoFromDF(redstar_district_mixed_df[41:80,])\nfor(i in 2:20){\n  redstar_direction_df[[i+1]] = getDirectionInfoFromDF(redstar_district_mixed_df[(40*i+1):(40*(i+1)),])\n}\n# redstar_direction_df_copy = redstar_direction_df\nredstar_direction_final_df = rbindlist(redstar_direction_df)\nredstar_direction_final_df = redstar_direction_final_df[1:835,]\n\nredstar_four_direction_df = makeFourDirectionFromDF(redstar_location)\nredstar_four_direction_mixed_df = merge(redstar_location,redstar_direction_df,by = \"mall_name\",allow.cartesian=TRUE)\nredstar_four_direction_mixed_df = as.data.frame(redstar_four_direction_mixed_df)\nredstar_four_direction_df = list()\nfor(i in 1:7){\n  redstar_four_direction_df[[i]] = getDirectionInfoFromDF(redstar_four_direction_mixed_df[(40*(i-1)+1):(40*i),])\n}\nredstar_four_direction_final_df = rbindlist(redstar_four_direction_df)\nredstar_four_direction_final_df = redstar_four_direction_final_df[1:260,]\n\ncombined_highway_raw_df = rbind(redstar_direction_final_df,redstar_four_direction_final_df)\ncombined_highway_raw_dt = data.table(combined_highway_raw_df)\n# highway_shortest_distance_result = combined_highway_raw_dt[,.(distance = min(highway_distance)),by = \"start_point\"]\nshortest_distance_result = combined_highway_raw_dt[,.(highway_distance = min(highway_distance),district_center_distance = min(distance,na.rm = TRUE)),by = \"start_point\"]\nredstar_result = merge(redstar_result,shortest_distance_result,by.x = \"mall_name\",by.y = \"start_point\")\n\nsource(\"~/Rfile/R_impala.R\")\ncommunity_data_sql = \"select id,city,province,area,name,address,plate,areamonut,roommount,buildingdate,longitude,latitude,buildingamount,pricesection,ownermallname from ods.ods_db_dragoneye_xiwa_redstar_community_dt\"\ncommunity_data = read_data_impala_general(community_data_sql)\n#using string bfore \"市\" to do the check\ncommunity_data$join_city = ifelse(!str_detect(community_data$city,\"(\\\\w+)市$\"),community_data$city,str_extract(community_data$city,\"(\\\\w+)(?=市)\"))\nredstar_community_mixed_df = merge(y=redstar_location,x=community_data,by.y = \"city\",by.x = \"join_city\",all.y = TRUE)\nredstar_community_distance = distHaversine(redstar_community_mixed_df[,c('longitude.x','latitude.x')],redstar_community_mixed_df[,c('longitude.y','latitude.y')])\nredstar_community_distance = cbind(redstar_community_mixed_df[,c(\"city\",\"province\",\"mall_name\",\"area\",\"name\",\"address\",\"plate\",\"roommount\",\"pricesection\")],distance = redstar_community_distance)\nredstar_community_distance = data.table(redstar_community_distance)\n# redstar_community_5km_number = redstar_community_distance[,sum(distance<=5000,na.rm = TRUE),by = mall_name]\n# redstar_community_50km_number = redstar_community_distance[,sum(distance<=50000,na.rm = TRUE),by = mall_name]\nredstar_community_5km_roominfo = redstar_community_distance[distance<=5000,.(communitynum = .N,roomnum = sum(roommount,na.rm = TRUE),roomnumavailablerate = sum(roommount!=0)/.N,pricemorethan50k = sum(pricesection>50000)/sum(pricesection!=0),pricemorethan10k = sum(pricesection>10000)/sum(pricesection!=0)),by = mall_name]\nredstar_community_50km_roominfo = redstar_community_distance[distance<=50000,.(communitynum = .N,roomnum = sum(roommount,na.rm = TRUE),roomnumavailablerate = sum(roommount!=0)/.N,pricemorethan50k = sum(pricesection>50000)/sum(pricesection!=0),pricemorethan10k = sum(pricesection>10000)/sum(pricesection!=0)),by = mall_name]\nredstar_community_5km_roomavailable = redstar_community_distance[distance<=5000,.(totalprice = sum(roommount*pricesection,na.rm = TRUE),totalnum = sum(.SD[(roommount*pricesection!=0),roommount])),by = mall_name]\nredstar_community_5km_roomavailable[,avg_price:=totalprice/totalnum]\ncommunity_data_focus = community_data[community_data$city %in% city,]\ncommunity_data_focus = data.table(community_data_focus)\n\nlibrary(readxl)\nrent_original = read_xlsx(\"C:/Users/qingye.yuan/Desktop/工作需要/租金定价/租金定价模型二期数据.xlsx\")\nmall_name = rent_original$MALL_NAME\nrent_original[] = lapply(rent_original,as.numeric)\nrent_original$MALL_NAME = mall_name\nrent_original$avg_price = rent_original$ZX_PRICE/rent_original$RENT_AREA_WA\n",
    "created" : 1520847854917.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "347961263",
    "id" : "E3C1134F",
    "lastKnownWriteTime" : 1524727038,
    "last_content_update" : 1524727038,
    "path" : "~/R_Projects/rental_model_standard/Rfile/main.R",
    "project_path" : "Rfile/main.R",
    "properties" : {
        "docOutlineVisible" : "0",
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}