{
    "collab_server" : "",
    "contents" : "big_general_info_original = read.csv(\"~/data/rental_raw_data.csv\",stringsAsFactors = FALSE)\nbig_general_info_original = data.table(big_general_info_original)\nbig_general_info = big_general_info_original[!is.na(RENT) & RENT != 0,]\nbig_general_info[,area_avg := as.integer(median(RENT_AREA,na.rm = TRUE)),by = c(\"MALL_NAME\")]\nbig_general_info[is.na(RENT_AREA),RENT_AREA := area_avg]\n# big_general_info[price == 0, price := rent/RENT_AREA]\nbig_general_info = as.data.frame(big_general_info)\n\n# some special cases\nbig_general_info[big_general_info$MALL_NAME==\"上海汶水商场\" & big_general_info$DATE_ID == 201409,\"XINYETAI_NUM\"] = 0.5\nbig_general_info[big_general_info$MALL_NAME==\"杭州古墩商场\" & big_general_info$DATE_ID == 201410,\"XINYETAI_NUM\"] = 6/31\n\nbig_general_info = big_general_info[,!(names(big_general_info) %in% c(\"area_avg\",\"GROUP_NUM\"))]\nbig_general_info = data.table(big_general_info)\nbig_general_info[,RENT := c(RENT[-1:-3],rep(NA,3)),by = \"MALL_NAME\"]\nbig_general_info = as.data.frame(big_general_info)\nbig_general_info$MALL_NAME =  str_replace(big_general_info$MALL_NAME,\"北京至尊Mall\",\"北京东四环商场\")\n\ntrain_df = big_general_info[!(big_general_info$DATE_ID %in% 201801:201803),]\n# dest_df = big_general_info[big_general_info$DATE_ID %in% c(201801,201802,201803),]\ntest_df = big_general_info[big_general_info$DATE_ID %in% c(201801,201802,201803),]\n\ntrain_df = train_df[complete.cases(train_df),]\n# dest_df = dest_df[complete.cases(dest_df[,!(names(dest_df) %in% \"RENT\")]),]\ntest_df = test_df[complete.cases(test_df),]\n\ntest_mall_names = test_df[,\"MALL_NAME\"]\ntrain_rent = train_df[,!(names(big_general_info) %in% c(\"MALL_NAME\",\"MALL_CODE\",\"DATE_ID\",\"OPEN_DATE\",\"PRICE\",\"YEAR\"))]\n# dest_rent = dest_df[,!(names(big_general_info) %in% c(\"MALL_NAME\",\"MALL_CODE\",\"DATE_ID\",\"OPEN_DATE\",\"PRICE\",\"YEAR\"))]\ntest_rent = test_df[,!(names(big_general_info) %in% c(\"MALL_NAME\",\"MALL_CODE\",\"DATE_ID\",\"OPEN_DATE\",\"PRICE\",\"YEAR\"))]\n\nlibrary(readxl)\nrent_data_1219 = read_xlsx(\"~/data/rent_data/new_rent_data.xlsx\")\n#modify the original data for predict(put rent data 3 month ahead), remove col not used for this model\ngetModelData = function(rent_data_1219){\n  rent_data_1219 = data.table(rent_data_1219)\n  rent_data_1219[,rent := c(finalprice[-1:-3],rep(NA,3)),by = \"mall_name\"]\n  assign('rent_data_1219',rent_data_1219,envir = .GlobalEnv)\n  colpicked = !(colnames(rent_data_1219)%in%c(\"year\",\"open_date\",\"finalprice\",\"key1\"))\n  rent_data_1219 = data.frame(rent_data_1219)\n  rent_data_1219 = rent_data_1219[,colpicked]\n  return(rent_data_1219)\n}\n\nrentModelData = getModelData(rent_data_1219)\n\ngetyearModeData = function(){\n  rent_data_1219[,.SD[1:(.N-12),],by = \"mall_name\"]\n  rent_data_1219[,seq := 1:.N,by = \"mall_name\"]\n  rent_data_1219[,getYearPara(date_id,min),by = \"mall_name\"]\n  # View(rent_data_1219[,.(startmon = getYearPara(date_id,min)),by = \"mall_name\"])\n  sum_col = c(\"finalprice\",\"rent_area_wa\",\"customer_num\",\"sale\",\"finalprice_jiaju\",\"area_jiaju\",\n              \"jiaju_num\",\"finalprice_jiancai\",\"area_jiancai\",\"jiancai_num\",\"finalprice_ruanzhuang\",\n              \"area_ruanzhuang\",\"ruanzhuang_num\",\"final_jinkou\",\"area_jinkou\",\"jinkou_num\",\"finalprice_xinyetai\",\n              \"area_xinyetai\",\"xinyetai_num\",\"brand_num\",\"gdp\",\"population\",\"region_area\",\"density\")\n  avg_col = c(\"avg_gdp\",\"avg_salary\",\"highway_distance\",\"road_distance\",\"location\",             \n              \"subway_distance\",\"shangquan_distance\",\"shangquan_num\")\n  rent_data_year = rent_data_1219[,c(lapply(.SD[,sum_col,with=FALSE],getYearPara,sum),lapply(.SD[,avg_col,with=FALSE],getYearPara,mean),lapply(.SD[,\"date_id\",with = FALSE],getYearPara,max),\"predprice\"=lapply(.SD[,\"finalprice\",with = FALSE],getYearReal,sum)),by = \"mall_name\"]\n  # setnames(rent_data_year,\"predprice.finalprice\",\"predprice\")\n  rent_data_year = rent_data_year[,predprice:=c(predprice.finalprice[1:(.N-12)],rep(NA,12)),by = \"mall_name\"]\n  rent_data_year$predprice.finalprice = NULL\n  setnames(rent_data_year,\"predprice\",\"rent\")\n  # base_rent = rent_data_year[,!(names(rent_data_year)%in%c(\"mall_name\",\"date_id\"))]\n  dest_rent = rent_data_year[date_id == 201711,]\n  rest_rent = rent_data_year[!is.na(rent),]\n  test_rent = rest_rent[,.SD[.N,],by = \"mall_name\"]\n  train_rent = rest_rent[,.SD[1:(.N-1),],by = \"mall_name\"]\n  test_mall_names = test_rent$mall_name\n  dest_mall_names = dest_rent$mall_name\n  train_rent = train_rent[,!(names(train_rent)%in%c(\"mall_name\",\"date_id\")),with = FALSE]\n  test_rent = test_rent[,!(names(test_rent)%in%c(\"mall_name\",\"date_id\")),with = FALSE]\n  dest_rent = dest_rent[,!(names(dest_rent)%in%c(\"mall_name\",\"date_id\")),with = FALSE]\n  train_rent = data.frame(train_rent)\n  test_rent = data.frame(test_rent)\n  dest_rent = data.frame(dest_rent)\n}\n\n#seperate the data into train,test and dest set, along with the name of the malls returned\ngetTrainTestData = function(big_general_info,test_time_index = 201706:201708,dest_time_index = 201709:201711){\n  train_df = big_general_info[!(big_general_info$date_id %in% c(test_time_index,dest_time_index)),]\n  dest_df = big_general_info[big_general_info$date_id %in% dest_time_index,]\n  test_df = big_general_info[big_general_info$date_id %in% test_time_index,]\n  \n  train_df = train_df[complete.cases(train_df),]\n  dest_df = dest_df[complete.cases(dest_df[,!(names(dest_df) %in% \"rent\")]),]\n  test_df = test_df[complete.cases(test_df),]\n  \n  test_mall_names = test_df[,\"mall_name\"]\n  train_rent = train_df[,!(names(big_general_info) %in% c(\"mall_name\",\"mall_code\",\"date_id\"))]\n  dest_rent = dest_df[,!(names(big_general_info) %in% c(\"mall_name\",\"mall_code\",\"date_id\"))]\n  test_rent = test_df[,!(names(big_general_info) %in% c(\"mall_name\",\"mall_code\",\"date_id\"))]\n  return(list(\"train_rent\"=train_rent,\"test_rent\"=test_rent,\"dest_rent\"=dest_rent,\"test_mall_names\"=test_mall_names))\n}\n\nrentModelDataList = getTrainTestData(rentModelData)\ntrain_rent_1219 = rentModelDataList$train_rent\ntest_rent_1219 = rentModelDataList$test_rent\ndest_rent_1219 = rentModelDataList$dest_rent\ntest_mall_names_1219 = rentModelDataList$test_mall_names\n\nrentModelCor = cor(rbindlist(list(train_rent_1219,test_rent_1219)))\nView(rentModelCor)\nlibrary(caret)\nrentModelHighlyCorrelated <- findCorrelation(rentModelCor, cutoff=0.5,names = TRUE)\nprint(rentModelHighlyCorrelated)\n\ncontrol <- trainControl(method=\"repeatedcv\", number=10, repeats=3)\n# train the model\nrentModel <- train(rent~., data=train_rent_1219, method=\"neuralnet\", preProcess=\"scale\", trControl=control,\n                   importance = T)\nrentModel = gbm(rent ~ . ,data = train_rent_1219,distribution = \"gaussian\",n.trees = 100000,interaction.depth = 4)\n\n",
    "created" : 1526350168000.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3952660124",
    "id" : "C3A3D2C5",
    "lastKnownWriteTime" : 1526440370,
    "last_content_update" : 1526440370411,
    "path" : "~/R_Projects/rental_model_standard/Rfile/process_temp.R",
    "project_path" : "Rfile/process_temp.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 25,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}