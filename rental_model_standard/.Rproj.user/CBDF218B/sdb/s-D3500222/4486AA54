{
    "collab_server" : "",
    "contents" : "library(rvest)\nlibrary(magrittr)\nlibrary(tabulizer)\nlibrary(tesseract)\n\ntemp = list()\ntemp1 = list() \ntemp2 = list()\nfor (i in 2001:4000){\n  temp1[[i]] = google_geocode(pv[i],key = place_key)$results\n}\nfor (i in 4001:length(pv)){\n  temp2[[i]] = google_geocode(pv[i],key = place_key)$results\n}\ntemp2[2001:4000] = temp[2001:4000]\ntemp = temp2[2001:length(pv)]\n# temp_extract_col = lapply(temp,subset,select = c(\"geometry.location.lat\",\"geometry.location.lng\"))\nl = list()\ni = 1\nfor(element in temp){\n  if(i>52){\n    browser()\n  }\n  l[[i]] = element$geometry$location[,c(\"lat\",\"lng\")]\n  if(is.null(l[[i]])){\n    print(paste0(\"null elements:\",i))\n  }\n  else if(nrow(l[[i]])>1){\n    print(paste0(\"duplicate elements:\",i))\n  }\n  i = i+1\n  print(i)\n}\ni = 1\nfor(element in temp){\n  if(length(element) == 0){\n    print(i)\n  }\n  if(i>2600){\n    break\n  }\n  i = i+1\n}\n\ngeocode(commerce_cord_result[commerce_cord_result$pv ==\"常州曼哈顿广场\",]$pv)\ngoogle_geocode(commerce_cord_result[commerce_cord_result$pv ==\"常州曼哈顿广场\",]$pv,key = place_key)\ngetBaiduGeoData(commerce_cord_result[commerce_cord_result$pv ==\"常州曼哈顿广场\",]$pv)\n\ngetDaodeGeoData(iconv(\"常州曼哈顿广场\",\"gbk\",\"utf-8\"))\ngetDaodeGeoData(\"常州金坛商业区\")\ngetDaodeGeoData(\"常州金坛市中心\")\n\n\ntest_start = \"39.983171,116.308479\"\ntest_start = \"39.8935055024,116.4526963234\" #广泉小区\ntest_end = \"39.996060,116.353455;39.949227,116.394310\"\ntest_end = \"39.9075017400,116.3912022800\"\ntemp = getTencentRouteInfo(test_start,test_end)\n\ngoogle_directions(c(39.70221,106.8455),c(39.505925,106.726099),key = place_key)\n\ntemp3 = google_directions(\"beijing\",\"shanghai\",key = place_key)\ntemp3[[1]] = temp3\ntemp3[[2]] = temp3$routes$legs[[1]]$steps[[1]]\nView(temp3[[2]])\ntemp3[[2]]$distance$value/temp3[[2]]$duration$value*3.6\n\ntemp = getDirectionInfoFromDF(redstar_district_mixed_df[1:5,])\n\na = makeFourDirection(redstar_location[1,])\n\noptions(java.parameters = \"- Xmx1024m\")\nsource('~/Rfile/R_hana.R', encoding = 'UTF-8')\nmall_p_flow_sql = \"select * from bigbi.dm_mall_pass_flow_day\"\ntemp = read_data_from_hana(mall_p_flow_sql)\n\ncommunity_data_sample = community_data_focus[,.SD[1:10,],by = \"city\"]\ncommunity_data_sample = community_data_focus[pricesection > 0,.SD[sample(nrow(.SD),10),],by = \"city\"]\ncommunity_data_sample = community_data_sample[,c(\"city\",\"name\",\"pricesection\")]\n\ncity_gdp_url = \"https://wenku.baidu.com/view/b97475622f3f5727a5e9856a561252d380eb2021.html\"\ncity_gdp_page = read_html(city_gdp_url)\ncity_gdp = city_gdp_page %>% html_nodes('div.reader-pic-item') %>% html_text()\n\ncity_gdp_url = \"http://www.sohu.com/a/219596742_683734\"\ncity_gdp_page = read_html(city_gdp_url)\ncity_gdp = city_gdp_page %>% html_nodes('article#mp-editor p') %>% html_text()\ncity_gdp = city_gdp[str_detect(city_gdp,\"^[\\\\d]{1,2}\\\\.\")]\ngdp = str_extract(city_gdp,\"\\\\d+(?=亿元)\")\npopulation = str_extract(city_gdp,\"\\\\d+(?=万)\")\nincreasing_rate = str_extract(city_gdp,\"\\\\d+(\\\\.)?\\\\d*(?=%)\")\ncity_name = str_extract(city_gdp,\"(?<=\\\\d\\\\.)[^a-z]+?(?=(\\\\d){2})\")\n\ncity_gdp_pdf = extract_tables(\"D://downloads//gdp_ranking.pdf\",encoding = \"UTF-8\",pages = 2)\ngdp_pic1  <- ocr(\"D://downloads//gdp_ranking1.jpg\")\n\n#We will check if this can work\nsource('~/Rfile/R_hana.R', encoding = 'UTF-8')\nshop_tables = read_data_from_hana(\"select * from BIGBI.DIM_ALL_MALL_V2\")\nshop_tables_self_manage = shop_tables[shop_tables$MALL_TYPE==\"自营\",c(\"MALL_NAME\",\"MALL_CODE\",\"GPS\",\"COUNTRY_NAME\",\"OPEN_DATE\")]\nshop_tables_self_manage[,c(\"lon\",\"lat\")] = str_split_fixed(shop_tables_self_manage$GPS,n = 2,\";\")\nshop_tables_self_manage = shop_tables_self_manage[-1,]\nshop_tables_self_manage$OPEN_DATE = str_sub(shop_tables_self_manage$OPEN_DATE,1,10)\nshop_tables_self_manage$MALL_CODE = as.numeric(shop_tables_self_manage$MALL_CODE)\nshop_tables_self_manage$lon = as.numeric(shop_tables_self_manage$lon)\nshop_tables_self_manage$lat = as.numeric(shop_tables_self_manage$lat)\nm_check_lon_lat = merge(redstar_points,shop_tables_self_manage,by.x = \"商场代码\",by.y = \"MALL_CODE\",all.x = TRUE)\nm = m_check_lon_lat[abs(m_check_lon_lat$longitude-m_check_lon_lat$lon)>0.02|(m_check_lon_lat$latitude-m_check_lon_lat$lat)>0.02,]\nm2 = m_check_lon_lat[abs(m_check_lon_lat$longitude-m_check_lon_lat$lon)>0.01|(m_check_lon_lat$latitude-m_check_lon_lat$lat)>0.01,]\n\n# 39.4906288049,116.7004895210  廊坊龙河商场\n# 28.1052031549,113.0133533478  长沙韶山商场\n# 30.6197434307,114.1717457771  武汉额头湾竹叶海商场\n# 22.5782826444,113.3909332752  中山港口商场\n# 41.8920150908,123.4138655663  沈阳沈北欧丽洛雅\n# 24.5086557356,118.0921548692  厦门宝象商场\n# 29.5295259289,106.5633380413  重庆南坪商场\n# 37.4649700000,121.3573100000  烟台建材商场\n# 45.7203500000,126.5728900000  哈尔滨哈西商场\n\n\nredstar_points[redstar_points$商场代码==10130,c(\"latitude\",\"longitude\",\"address\")] = c(39.4906288049,116.7004895210,\"廊坊市安次区南龙道33号\")\n\ncity_rank = read.table(\"~/data/city_rank.txt\",sep = \" \",fileEncoding = \"utf-8\")\nspecial_city_rank = read.table(\"~/data/city_rank2.txt\",sep = \" \",fileEncoding = \"utf-8\")\nscore = special_city_rank$V2\ncity_rank$score[1:19] = score\ncity_rank$score[20:49] = seq(from = 35,to = 25,length.out = 30)\ncity_rank$score[50:119] = seq(from = 22,to = 15,length.out = 70)\ncity_rank$score[120:209] = seq(from = 13,to = 8,length.out = 90)\ncity_rank$score[210:nrow(city_rank)] = seq(from = 6,to = 1,length.out = 129)\ncolnames(city_rank)[[1]] = \"city_name\"\n\nfor(i in extra_pv3){\n  print(i)\n  getDaodeGeoData(i)\n}\n\nsome_function_that_may_fail <- function() {\n  temp = runif(1)\n  if( temp < 0.000001 ) stop()\n  return(1)\n}\n\nr <- NULL\nattempt <- 1\nwhile( is.null(r) && attempt <= 3 ) {\n  attempt <- attempt + 1\n  print(attempt)\n  try(\n    r <- some_function_that_may_fail()\n  )\n} \n\n# redstar_result_mall_name = redstar_result$mall_name\n\nlibrary(plyr)\nredstar_result$mall_name = as.character(redstar_result$mall_name)\nredstar_result1 = join(redstar_result,redstar_location[,c(\"mall_name\",\"mall_code\")],by = \"mall_name\") \n# redstar_result = redstar_result1\n\nredstar_result = setcolorder(redstar_result, as.character(colnames(redstar_result_update)))\n",
    "created" : 1521450315444.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1172134674",
    "id" : "4486AA54",
    "lastKnownWriteTime" : 1525746100,
    "last_content_update" : 1525746100387,
    "path" : "~/R_Projects/rental_model_standard/backup/temp.R",
    "project_path" : "backup/temp.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}