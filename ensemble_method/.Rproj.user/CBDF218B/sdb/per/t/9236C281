{
    "collab_server" : "",
    "contents" : "# install.packages(\"gbm\")\n# ref:https://datascienceplus.com/gradient-boosting-in-r/\nrequire(gbm)\nrequire(MASS)#package with the boston housing dataset\n\n#separating training and test data\ntrain=sample(1:506,size=374)\nBoston.boost=gbm(medv ~ . ,data = Boston[train,],distribution = \"gaussian\",n.trees = 10000,\n                 shrinkage = 0.01, interaction.depth = 4)\nBoston.boost\nsummary(Boston.boost) #Summary gives a table of Variable Importance and a plot of Variable Importance\nplot(Boston.boost,i=\"lstat\") \n#Inverse relation with lstat variable\nplot(Boston.boost,i=\"rm\") \n#as the average number of rooms increases the the price increases\ncor(Boston$lstat,Boston$medv)#negetive correlation coeff-r\ncor(Boston$rm,Boston$medv)#positive correlation coeff-r\nn.trees = seq(from=100 ,to=10000, by=100) #num of trees-a vector of 100 values \n\n#Generating a Prediction matrix for each Tree\npredmatrix<-predict(Boston.boost,Boston[-train,],n.trees = n.trees)\ndim(predmatrix) #dimentions of the Prediction Matrix\n\n#Calculating The Mean squared Test Error\ntest.error<-with(Boston[-train,],apply( (predmatrix-medv)^2,2,mean))\nhead(test.error) #contains the Mean squared test error for each of the 100 trees averaged\n\n#Plotting the test error vs number of trees\nplot(n.trees , test.error , pch=19,col=\"blue\",xlab=\"Number of Trees\",ylab=\"Test Error\", main = \"Perfomance of Boosting on Test Set\")\n\nlibrary(randomForest)\nrf = randomForest(medv ~ . ,data = Boston[train,])\nrf.pred = predict(rf,Boston[-train,-14])\ne.rf = crossprod(rf.pred - unlist(Boston[-train,14]))/nrow(Boston[-train,])\n#adding the RandomForests Minimum Error line trained on same data and similar parameters\nabline(h = e.rf,col=\"red\") #test.err is the test error of a Random forest fitted on same data\nlegend(\"topright\",c(\"Minimum Test error Line for Random Forests\"),col=\"red\",lty=1,lwd=1)\n\n\n# install.packages(\"adabag\")\nlibrary(adabag)\nadadata<-read.csv('~/data/bank-full.csv',\n                  header=TRUE,sep=\";\")\nadaboost<-boosting(y~age+job+marital+education+default+balance+\n                     housing+loan+contact+day+month+duration+campaign+pdays+previous+\n                     poutcome, data=adadata, boos=TRUE, mfinal=20,coeflearn='Breiman')\nsummary(adaboost)\nadaboost$trees\nadaboost$weights\nadaboost$importance\nerrorevol(adaboost,adadata)\npredict(adaboost,adadata)\nt1<-adaboost$trees[[1]]\nlibrary(tree)\nplot(t1)\ntext(t1,pretty=0)\n\nlibrary(rpart)\ndata(iris)\nsub <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))\niris.adaboost <- boosting(Species ~ ., data=iris[sub,], mfinal=10)\niris.predboosting<- predict.boosting(iris.adaboost, newdata=iris[-sub,])\niris.predboosting$prob",
    "created" : 1509594801095.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2621734726",
    "id" : "9236C281",
    "lastKnownWriteTime" : 1511851702,
    "last_content_update" : 1511851702846,
    "path" : "~/R_Projects/ensemble_method/Rfile/gradient_boost.R",
    "project_path" : "Rfile/gradient_boost.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}