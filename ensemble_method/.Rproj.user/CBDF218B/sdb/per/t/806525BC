{
    "collab_server" : "",
    "contents" : "library(mlbench)\nlibrary(caret)\nlibrary(caTools)\n# The caret package supports parallel processing in order to decrease the compute time for a given \n# experiment. It is supported automatically as long as it is configured. \n# This is used for the loops for the repeats of cross validation for each parameter combination.\nlibrary(doMC)\nregisterDoMC(cores=4)\n\nvignette(\"caret\")\n# load data\ndata(PimaIndiansDiabetes)\n# rename dataset to keep code below generic\ndataset <- PimaIndiansDiabetes\n\ncontrol <- trainControl(method=\"repeatedcv\", number=10, repeats=3)\nseed <- 7\n\nmetric <- \"Accuracy\"\n\npreProcess=c(\"center\", \"scale\")\n\nset.seed(seed)\nfit.lda <- train(diabetes~., data=dataset, method=\"lda\", metric=metric, preProc=c(\"center\", \"scale\"), trControl=control)\n# Logistic Regression\nset.seed(seed)\nfit.glm <- train(diabetes~., data=dataset, method=\"glm\", metric=metric, trControl=control)\n# GLMNET\nset.seed(seed)\nfit.glmnet <- train(diabetes~., data=dataset, method=\"glmnet\", metric=metric, preProc=c(\"center\", \"scale\"), trControl=control)\n# SVM Radial\nset.seed(seed)\nfit.svmRadial <- train(diabetes~., data=dataset, method=\"svmRadial\", metric=metric, preProc=c(\"center\", \"scale\"), trControl=control, fit=FALSE)\n# kNN\nset.seed(seed)\nfit.knn <- train(diabetes~., data=dataset, method=\"knn\", metric=metric, preProc=c(\"center\", \"scale\"), trControl=control)\n# Naive Bayes\nset.seed(seed)\nfit.nb <- train(diabetes~., data=dataset, method=\"nb\", metric=metric, trControl=control)\n# CART\nset.seed(seed)\nfit.cart <- train(diabetes~., data=dataset, method=\"rpart\", metric=metric, trControl=control)\n# C5.0\nset.seed(seed)\nfit.c50 <- train(diabetes~., data=dataset, method=\"C5.0\", metric=metric, trControl=control)\n# Bagged CART\nset.seed(seed)\nfit.treebag <- train(diabetes~., data=dataset, method=\"treebag\", metric=metric, trControl=control)\n# Random Forest\nset.seed(seed)\nfit.rf <- train(diabetes~., data=dataset, method=\"rf\", metric=metric, trControl=control)\n# Stochastic Gradient Boosting (Generalized Boosted Modeling)\nset.seed(seed)\nfit.gbm <- train(diabetes~., data=dataset, method=\"gbm\", metric=metric, trControl=control, verbose=FALSE)\nplot(fit.gbm)\nplot(fit.svmRadial)\n\n#the resamples compare all the results involved in training, 10 diff cv way and repeats 3 times\n#each could correspond to diff parameters\nresults <- resamples(list(lda=fit.lda, logistic=fit.glm, glmnet=fit.glmnet,\n                          svm=fit.svmRadial, knn=fit.knn, nb=fit.nb, cart=fit.cart, c50=fit.c50,\n                          bagging=fit.treebag, rf=fit.rf, gbm=fit.gbm))\n# Table comparison\nsummary(results)\nbwplot(results)\ndensityplot(results, metric = \"Accuracy\")\n\npSpecies <- predict(fit.lda,dataset[,!colnames(dataset) %in% \"diabetes\"],type='prob')\ncolAUC(pSpecies,dataset$diabetes,plot=TRUE)\n\nlibrary(caret)\nlibrary(mlbench)\ndata(Sonar)\nset.seed(107)\ninTrain <- createDataPartition(y = Sonar$Class,\n                                 ## the outcome data are needed\n                                   p = .75,\n                                 ## The percentage of data in the\n                                   ## training set\n                                   list = FALSE)\n\n## The format of the results\ntraining <- Sonar[inTrain,]\ntesting <- Sonar[-inTrain,]\n\n#The notes from caret vignette\nset.seed(123)\nctrl <- trainControl(method = \"repeatedcv\",\n                        repeats = 3,\n                        classProbs = TRUE,#this is for AUC calculation\n                        summaryFunction = twoClassSummary)\n\nplsFit <- train(Class ~ .,\n                   data = training,\n                   method = \"pls\",\n                   tuneLength = 15,\n                   trControl = ctrl,\n                   metric = \"ROC\",\n                   preProc = c(\"center\", \"scale\"))\n\nplsFit\n\nplot(plsFit)\n\nrdaGrid = data.frame(gamma = (0:4)/4, lambda = 3/4)\nset.seed(123)\nrdaFit <- train(Class ~ .,\n                  + data = training,\n                  + method = \"rda\",\n                  + tuneGrid = rdaGrid,\n                  + trControl = ctrl,\n                  + metric = \"ROC\")\n\n\n\n",
    "created" : 1510813135054.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1900025077",
    "id" : "806525BC",
    "lastKnownWriteTime" : 1516937514,
    "last_content_update" : 1516937514613,
    "path" : "~/R_Projects/ensemble_method/Rfile/CARET.R",
    "project_path" : "Rfile/CARET.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}