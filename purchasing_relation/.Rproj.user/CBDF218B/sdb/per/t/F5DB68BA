{
    "contents" : "source('~/Rfile/R_impala.R')\nsource('~/Rfile/toolfunc.R')\nsource2('~/Rfile/R_hive.R',7,17)\n\nrules = apriori(Groceries,parameter = list(support = 0.001,confidence = 0.5))\n\ninspect(head(sort(rules, by = \"lift\"), 30))\n\nplot(rules)\n\nplot(rules, measure = c(\"support\", \"lift\"), shading = \"confidence\")\n\nplot(rules, shading = \"order\", control = list(main = \"Two-key plot\"))\n\nsel <- plot(rules, measure = c(\"support\", \"lift\"), shading = \"confidence\",interactive = TRUE)\n\nplot(rules, method = \"grouped\")\n\nplot(rules, method = \"grouped\",control = list(k = 50))\n\nplot(rules, method = \"grouped\",control = list(k = 50),interactive = TRUE)\n\nsubrules2 <- head(sort(rules, by = \"lift\"), 10)\n\nplot(subrules2, method = \"graph\",control=list(cex=1.2))\nplot(subrules2,method = \"graph\",control = list(type = 'itemsets',edgeCol = \"red\"))\nplot(subrules2,method=\"graph\",control=list(type=\"bipartite\"))\n#画矩阵图\nplot(rules, method=\"matrix\", measure=c(\"lift\", \"confidence\"))\n\n#画3d矩阵图\nplot(rules, method=\"matrix3D\", measure=\"lift\")\nplot(rules, method=\"matrix3D\", measure=\"lift\", control=list(reorder=TRUE))\n#带颜色的散点图\nplot(rules, shading=\"order\", control = list(main = \"Two-key plot\", \n                                            col=rainbow(max(size(rules))-1L)))\n\nplot(subrules2, method = \"graph\", control = list(type = \"items\",edgeCol = 'red'))\n\n#箭头图\nplot(subrules2, method=\"paracoord\")\n\nplot(subrules2, method=\"doubledecker\")\n\n#double decker图 only apply to a single rule\noneRule = sample(rules,1)\ninspect(oneRule)\nplot(oneRule, method = \"doubledecker\", data = Groceries)\nplot(oneRule, method = \"mosaic\", data = Groceries)\n\n#对基础支持集合的应用\nitemsets <- eclat(Groceries, parameter = list(support = 0.02, minlen=2))\nplot(itemsets, method=\"graph\")\nplot(itemsets, method=\"paracoord\", control=list(alpha=.5, reorder=TRUE))\n\n#使用plotly来观察思考\nplotly_arules(rules, method = \"scatterplot\", measure = c(\"support\", \"confidence\"),\n              shading = \"lift\", max = 1000)\nplotly_arules(rules, method = \"matrix\")\n\np <- plotly_arules(rules)\nhtmlwidgets::saveWidget(p, \"~/Rmarkdown/arules.html\", selfcontained = FALSE)\nbrowseURL(\"arules.html\")\n\nplotly_arules(rules, jitter = 10, opacity = .7, size = 10, symbol = 1,\n              colors = c(\"blue\", \"green\"))\n\n#可以以图表的方式方便的察看数据\ninspectDT(rules)\n\n#save graphs\nsaveAsGraph(rules, \"rules.graphml\")\n\n# 存储以方便Gephi来引用\n# saveDot(head(sort(rules,by=\"lift\"),1000),file=\"rules.dot\")\n\nquery = \"select mobile,prod_name,cont_cat1_name,cont_cat2_name,cont_cat3_name,to_date(ordr_date) from dl.fct_ordr d\nwhere to_date(ordr_date) >= '2017-06-21' and to_date(ordr_date) <= '2017-06-27'\nand ((d.ordr_status not in (1,7,19) and d.sale_type<>'oms') or (d.ordr_status ='Y' and d.sale_type='oms'))\"\n\norder_list = dbGetQuery(con,query)\norder_list = data.table(order_list)\norder.list.nona = order_list[!is.na(cont_cat3_name),]\norder.list.nodup = unique(order.list.nona, by=c(\"mobile\", \"cont_cat3_name\"))\norder.list.nodup[,number := .N,by = c(\"mobile\", \"cont_cat3_name\")]\nsetorder(order.list.nodup,mobile)\n\nprepare.list = aggregate(cont_cat3_name~mobile,data = order.list.nodup,paste)\n\nfrequentsets=eclat(prepare.list$cont_cat3_name,parameter=list(support=0.001,maxlen=20))  #求频繁项集  \n\ninspect(frequentsets)\ninspect(sort(frequentsets,by=\"support\")[1:100])    #根据支持度对求得的频繁项集排序并察看\n\nrules=apriori(prepare.list$cont_cat3_name,parameter=list(support=0.001,confidence=0.01))    #求关联规则  \ny = rules\ninspect(sort(y,by=\"confidence\"))    #根据支持度对求得的关联规则子集排序并察看  \nx=subset(rules,subset=(lhs%pin%\"整体卫浴\")&lift>=0.1)    #求所需要的关联规则子集  \ninspect(x)\n\ndata(\"Adult\")\nrules <- apriori(Adult)\ninspect(rules[1000])\n\n#表示的特殊形式\ninspect(rules[1000], ruleSep = \"---->\", itemSep = \" + \", setStart = \"\", setEnd =\"\", \n        linebreak = FALSE)\n",
    "created" : 1499154722577.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1685570938",
    "id" : "F5DB68BA",
    "lastKnownWriteTime" : 1499307800,
    "path" : "~/R_Projects/purchasing_relation/Rfile/test_apriori.R",
    "project_path" : "Rfile/test_apriori.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}